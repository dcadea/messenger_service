name: messenger_dev
services:
  # messenger_service:
  #   image: messenger_service:latest
  #   container_name: awg.dev.messenger_service
  #   ports:
  #     - 8000:8000
  #   environment:
  #     ENV: dev

  #     RUST_LOG: debug
  #     RUST_BACKTRACE: 1

  #     CLIENT_ID: /secrets/auth0/client_id
  #     CLIENT_SECRET: /secrets/auth0/client_secret
  #     REDIRECT_URL: http://localhost:8000/callback
  #     ISSUER: https://dcadea.auth0.com/
  #     AUDIENCE: https://messenger.angelwing.io/api/v1
  #     REQUIRED_CLAIMS: iss,sub,aud,exp,permissions

  #     REDIS_HOST: awg.dev.redis
  #     MONGO_HOST: awg.dev.mongo
  #     MONGO_DB: dev-messenger
  #     NATS_HOST: awg.dev.nats
  #   volumes:
  #     - ./docker-volumes/dev/messenger_service/service.log:/usr/local/bin/service.log
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     mongo:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     nats:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy

  mongo:
    image: mongo:latest
    container_name: awg.dev.mongo
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/dev/mongo/data:/data
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    container_name: awg.dev.mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://awg.dev.mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy

  postgres:
      image: postgres:alpine
      container_name: awg.dev.postgres
      ports:
        - 5432:5432
      environment:
        POSTGRES_DB: messenger
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      volumes:
      - ./docker-volumes/dev/postgres/data:/var/lib/postgresql/data

  redis:
    image: redis/redis-stack:latest
    container_name: awg.dev.redis
    ports:
      - 6379:6379
      - 8001:8001
    volumes:
      - ./conf/dev/redis.conf:/usr/local/etc/redis/redis.conf
      - ./docker-volumes/dev/redis/data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2-alpine
    container_name: awg.dev.nats
    ports:
      - 4222:4222
      - 8222:8222
    healthcheck:
      test: wget http://localhost:8222/healthz -q -S -O -
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: awg.dev.minio
    command: server --console-address ":9001" /data/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
    - ./docker-volumes/dev/minio/data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
